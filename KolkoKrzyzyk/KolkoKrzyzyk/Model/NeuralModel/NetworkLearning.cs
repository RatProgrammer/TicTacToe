using System.Windows.Forms;
using AForge.Neuro;
using AForge.Neuro.Learning;
using TicTacToe.Model.DrawModel;
using TicTacToe.View;

namespace TicTacToe.Model.NeuralModel
{
    class NetworkLearning
    {
        public void Learn(LearningContainer learningContainer,LearningCanvas learningCanvas,ref ActivationNetwork network, ref BackPropagationLearning teacher)
        {
            learningContainer.SetChromaticImage(learningCanvas);
            var crossImage = learningContainer.GetChromaticImage(CanvasType.pcCross);
            double[] crossInput = crossImage.GetChromaticImage();

            var circleImage = learningContainer.GetChromaticImage(CanvasType.pcCircle);
            double[] circleInput = circleImage.GetChromaticImage();


            var blankImage = learningContainer.GetChromaticImage(CanvasType.pcBlank);
            double[] blankInput = blankImage.GetChromaticImage();
            double[][] input = new double[22][]
            {
                crossInput,
                circleInput,
                blankInput,
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //blank
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0, //circle
                    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0
                },

                new double[]
                {
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0, //circle
                    0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    0, 1, 1, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 1, 1, 0, 0, 0, 1, 0, 0,
                    0, 0, 0, 1, 1, 0, 1, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,
                    0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 1
                },
                new double[]
                {
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 1, 1, 0, 0, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 1, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 1
                },
                //new double[]
                //{
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, //blank
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                //},
                new double[]
                {
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, //blank
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                //new double[]
                //{
                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //blank
                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                //    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                //},
                new double[]
                {
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0, //circle
                    0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
                    0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                    0, 1, 0, 0, 0, 0, 0, 1, 1, 0,
                    0, 1, 1, 0, 0, 1, 1, 1, 0, 0,
                    0, 0, 1, 1, 1, 1, 1, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //circle
                    0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
                    0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
                    1, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                    1, 1, 0, 0, 0, 0, 0, 0, 0, 1,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 1, 1, 0, 0,
                    0, 0, 1, 1, 1, 1, 1, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //circle
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 1, 0,
                    0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 1, 0, 0, 0,
                    0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 1, 0, 0,
                    0, 1, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //circle
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 1, 0, 1, 1, 1, 0, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //circle
                    0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
                    0, 1, 1, 1, 1, 1, 1, 0, 0, 0,
                    0, 1, 1, 1, 0, 1, 0, 0, 0, 0,
                    0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                    1, 1, 1, 0, 0, 1, 1, 0, 0, 0,
                    1, 1, 1, 0, 1, 1, 0, 0, 0, 0,
                    1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
                    0, 1, 1, 1, 1, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 1, 0,
                    0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
                    0, 1, 0, 0, 0, 0, 1, 1, 0, 0,
                    1, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 0
                },
                new double[]
                {
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 1, 0,
                    0, 0, 0, 1, 0, 0, 1, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, //cross
                    0, 1, 0, 0, 0, 0, 0, 0, 0, 1,
                    0, 0, 1, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 0, 1, 0, 0, 0, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //circle
                    0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
                    0, 1, 1, 0, 1, 1, 1, 0, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 1, 1, 1, 0,
                    0, 1, 0, 0, 0, 0, 1, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, //circle
                    0, 0, 1, 1, 1, 1, 0, 0, 0, 0,
                    0, 1, 1, 0, 1, 1, 1, 0, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 1, 0, 0, 0, 1, 1, 1, 0,
                    0, 1, 1, 0, 0, 0, 1, 1, 0, 0,
                    0, 0, 1, 0, 0, 0, 1, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },
                new double[]
                {
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, //cross
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
                    0, 0, 1, 0, 0, 0, 0, 0, 1, 0,
                    0, 0, 0, 1, 0, 0, 0, 1, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
                    0, 0, 1, 0, 0, 0, 0, 1, 0, 0,
                    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                    1, 0, 0, 0, 0, 0, 0, 0, 0, 0
                },


            };
            double[][] output = new double[22][]
            {
                //8 cross 8 circle 6 blank
                new double[] {1, 0}, //cross
                new double[] {0, 1}, //circle
                new double[] {0, 0}, //blank
                new double[] {0, 0}, //blank
                new double[] {0, 1}, //circle
                new double[] {0, 1}, //circle
                new double[] {1, 0}, //cross
                new double[] {1, 0}, //cross
                new double[] {1, 0}, //cross
                //new double[] {0, 0}, //blank
                new double[] {0, 0}, //blank
                //new double[] {0, 0}, //blank
                new double[] {0, 1}, //circle
                new double[] {0, 1}, //circle
                new double[] {0, 1}, //circle
                new double[] {1, 0}, //cross
                new double[] {0, 1}, //circle
                new double[] {0, 1}, //circle
                new double[] {1, 0}, //cross
                new double[] {1, 0}, //cross
                new double[] {1, 0}, //cross
                new double[] {0, 1}, //circle
                new double[] {0, 1}, //circle
                new double[] {1, 0}, //cross
            };

            for (int i = 0; i < 100000; i++)
            {
                double error = teacher.RunEpoch(input, output);
            }
            var result = network.Compute(input[9]);

            network.Save("Net.bin");
            network = (ActivationNetwork)ActivationNetwork.Load("Net.bin");
            var result1 = network.Compute(input[5]);
            MessageBox.Show("Skończona nauka");
        }
    }
}
